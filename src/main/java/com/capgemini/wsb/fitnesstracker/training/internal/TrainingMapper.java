package com.capgemini.wsb.fitnesstracker.training.internal;

import com.capgemini.wsb.fitnesstracker.training.api.Training;
import com.capgemini.wsb.fitnesstracker.user.api.UserDto;
import org.springframework.stereotype.Component;

@Component
public class TrainingMapper {



    /**
     * Converts a {@link Training} entity to a {@link TrainingDto}.
     *
     * @param training the Training entity
     * @return the corresponding TrainingDto
     */
    public TrainingDto toDto(Training training) {
        // Map User entity to UserDto, if present
        UserDto userDto = training.getUser() != null ? userMapper.toDto(training.getUser()) : null;

        return new TrainingDto(
                training.getId(),
                userDto, // Pass UserDto here
                training.getStartTime(),
                training.getEndTime(),
                training.getActivityType(), // activityType is passed as an enum
                training.getDistance(),
                training.getAverageSpeed()
        );
    }

    /**
     * Converts a {@link TrainingDto} to a {@link Training} entity.
     *
     * @param trainingDto the TrainingDto object
     * @return the corresponding Training entity
     */
    public Training toEntity(TrainingDto trainingDto) {
        // Convert the activityType (String or enum) from TrainingDto to ActivityType
        ActivityType activityType = ActivityType.valueOf(trainingDto.activityType().toString()); // Adjusted for proper enum mapping

        return new Training(
                null,  // ID is auto-generated by the DB
                null,  // Set User entity as needed (optional, depending on your business logic)
                trainingDto.startTime(),
                trainingDto.endTime(),
                activityType,
                trainingDto.distance(),
                trainingDto.averageSpeed()
        );
    }
}
